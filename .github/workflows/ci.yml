name: CI
on: [push, pull_request]

jobs:
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable
      - name: Check if formatted
        id: FormatCheck
        shell: bash
        run: |
          find ./src -type f -print0 | xargs -0 sha256sum | sort >commit.txt
          cargo fmt
          find ./src -type f -print0 | xargs -0 sha256sum | sort >formatted.txt
          diff commit.txt formatted.txt
      - name: Push formatted code.
        if: ${{ failure() && steps.FormatCheck.conclusion == 'failure' }}
        shell: bash
        run: |
          rm commit.txt formatted.txt
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .
          git commit -m "Format Code."
          git push
  build_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-deb
      run: cargo install cargo-deb
    - uses: actions/checkout@master
    - name: Install dependencies
      run: |
        export DEBIAN_FRONTED=noninteractive
        sudo apt-get -qq update
        sudo apt-get install -y libxkbcommon-dev libasound2-dev
    - name: Build binary
      run: cargo build --release
    - name: Archive binary (Uncompressed)
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-Linux-gnu-uncompressed
        path: target/release/graduate
    - name: Compress binaries
      shell: bash
      run: |
        wget https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-amd64_linux.tar.xz -O upx.tar.xz
        tar xvJf upx.tar.xz
        upx target/release/graduate --best --lzma
    - name: Archive binary (Compressed)
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-Linux-gnu
        path: target/release/graduate
    - name: Pack .deb package
      run: cargo deb --no-build --no-strip
    - name: Rename .deb package
      run: mv target/debian/*.deb target/debian/graduate-x64-debian-linux-gnu.deb
    - name: Archive .deb package
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-Debian(dpkg)
        path: target/debian/graduate-x64-debian-linux-gnu.deb

  build_windows:
    runs-on: windows-latest
    steps:
    - uses: dtolnay/rust-toolchain@stable
    - uses: actions/checkout@master
    - name: Enable static CRT linkage
      run: |
        mkdir .cargo
        echo '[target.x64-pc-windows-msvc]' >> .cargo/config
        echo 'rustflags = ["-Ctarget-feature=+crt-static"]' >> .cargo/config
    - name: Run the application without starting the shell
      run: sed -i '1 i\#![windows_subsystem = \"windows\"]' src/main.rs
    - name: Build binary for DirectX 11 system
      env:
        WGPU_BACKEND: dx11
      run: |
        cargo build --release
        cp target/release/graduate.exe graduate-DirectX11.exe
    - name: Build binary for DirectX 11 system
      env:
        WGPU_BACKEND: dx12
      run: |
        cargo build --release
        cp target/release/graduate.exe graduate-DirectX12.exe
    - name: Archive binary (Uncompressed)
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-Windows-uncompressed
        path: graduate-DirectX1?.exe
    - name: Compress binaries
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-win64.zip" -OutFile "upx.zip"
        Expand-Archive -Path upx.zip -DestinationPath .\
        .\upx-4.0.2-win64\upx.exe graduate-DirectX11.exe --best --lzma
        .\upx-4.0.2-win64\upx.exe graduate-DirectX12.exe --best --lzma
    - name: Archive binary (Compressed)
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-Windows
        path: graduate-DirectX1?.exe

  build_macos:
    runs-on: macos-latest
    steps:
    - uses: dtolnay/rust-toolchain@stable
    - uses: actions/checkout@master
    - name: Build binary
      run: cargo build --release
    - name: Open binary via double-click
      run: chmod +x target/release/graduate
    - name: Archive binary (Uncompressed)
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-MacOS-uncompressed
        path: target/release/graduate
    - name: Compress binaries
      shell: bash
      run: |
        brew update
        brew install upx
        upx target/release/graduate --best --lzma
    - name: Archive binary (Compressed)
      uses: actions/upload-artifact@v3
      with:
        name: graduate-x64-MacOS
        path: target/release/graduate
